version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7.6
        environment:
          PIPENV_VENV_IN_PROJECT: true
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: myprojectuser
          POSTGRES_PASSWORD: password
          POSTGRES_DB: myproject

    steps:
      - checkout
#      - restore_cache:
#          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: Setup virtual environment
          command: |
            python3 -m venv env
            source env/bin/activate

      - run:
          name: Install django
          command: |
            . env/bin/activate
            pip install django

      - run:
          name: Install django rest framework
          command: |
            . env/bin/activate
            pip install djangorestframework

      - run:
          name: Install psycopg2
          command: |
            . env/bin/activate
            pip install psycopg2

      - run:
          name: Install bcrypt
          command: |
            . env/bin/activate
            pip install bcrypt==3.1.7

      - run:
          name: Install django-file-md5
          command: |
            . env/bin/activate
            pip install django-file-md5

      - run:
          name: Install boto3
          command: |
            . env/bin/activate
            pip install boto3

      - run:
          name: Install django-storages
          command: |
            . env/bin/activate
            pip install django-storages

      - run:
          name: Running tests
          command: |
            . env/bin/activate
            ls -a
            python3 manage.py test account.tests

  pr_check:
    docker:
      - image: circleci/python:3.7.6
        environment:
          PIPENV_VENV_IN_PROJECT: true
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: myprojectuser
          POSTGRES_PASSWORD: password
          POSTGRES_DB: myproject

    steps:
      - checkout
      #      - restore_cache:
      #          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: Setup virtual environment
          command: |
            python3 -m venv env
            source env/bin/activate

      - run:
          name: Install django
          command: |
            . env/bin/activate
            pip install django

      - run:
          name: Install django rest framework
          command: |
            . env/bin/activate
            pip install djangorestframework

      - run:
          name: Install psycopg2
          command: |
            . env/bin/activate
            pip install psycopg2

      - run:
          name: Install bcrypt
          command: |
            . env/bin/activate
            pip install bcrypt==3.1.7

      - run:
          name: Install django-file-md5
          command: |
            . env/bin/activate
            pip install django-file-md5

      - run:
          name: Install boto3
          command: |
            . env/bin/activate
            pip install boto3

      - run:
          name: Install django-storages
          command: |
            . env/bin/activate
            pip install django-storages

      - run:
          name: Running tests
          command: |
            . env/bin/activate
            ls -a
            python3 manage.py test account.tests

      - run:
           name: Zip Artifact
           command: |
             echo "testing the current build number: ${CIRCLE_BUILD_NUM}"
             cd ..
             mkdir -p artifacts
             zip -r csye6225-web-app-${CIRCLE_BUILD_NUM}.zip webapp
             mv csye6225-web-app-${CIRCLE_BUILD_NUM}.zip artifacts/
             cd artifacts
             cd ..

      - run:
           name: Artifacts are being uploded to S3
           command: |
             sudo pip install awscli
             cd artifacts
             aws s3 cp csye6225-web-app-${CIRCLE_BUILD_NUM}.zip s3://codedeploy.kshitizgupta.me

      - run:
           name: Call codeploy to deploy application
           command: |
             aws configure list
             aws configure set region us-east-1
             aws deploy create-deployment --application-name webapp --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name webapp --s3-location bucket=codedeploy.kshitizgupta.me,bundleType=zip,key=csye6225-web-app-${CIRCLE_BUILD_NUM}.zip

#      - save_cache:
#          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
#          paths:
#            - "env"

      - store_artifacts:
          path: test-reports/
          destination: python_app

workflows:
  version: 2
  pr-check:
    jobs:
      - pr_check
  build_deploy:
    jobs:
      - build:
          filters:
            branches:
              only: master